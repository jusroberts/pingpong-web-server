game new full
#room-id=@id
-doubles_player_box_size='65%'
-singles_player_box_size='85%'
-player_box_padding='2%'
-player_box_inset_height='10vh'
-player_box_inset_width='5vw'
-default_team_a_avatar='/images/pong_assets/pong_avatar 1 doubles.png'
-default_team_b_avatar='/images/pong_assets/pong_avatar 2 doubles.png'
.center{:style => "position: relative; top: 1%; text-align: center"}

%div{:style => "bottom: 0%; width: 100%; position: absolute; height: 45em; display:flex; padding: 2%;"}
  .left{:style => "height: 100%; width: 33%; padding: #{player_box_padding};"}
    -#Doubles#
    .picturebox.doubles-picturebox{:style => "display: none; height: #{doubles_player_box_size}; width: #{doubles_player_box_size};"}
      %img.player_a_1_img{:src => @player_a_1_url, :style => "height: 100%; width: 100%;"}
    .picturebox.doubles-picturebox{:style => "display: none; height: #{doubles_player_box_size}; width: #{doubles_player_box_size}; position: relative; left: #{player_box_inset_width}; top: -#{player_box_inset_height};"}
      %img.player_a_2_img{:src => @player_a_2_url, :style => "height: 100%; width: 100%;"}
    -#Singles#
    .picturebox.singles-picturebox{:style => "display: none; height: #{singles_player_box_size}; width: #{singles_player_box_size}; position: relative; top: 10%"}
      %img.player_a_1_img{:src => @player_a_1_url, :style => "height: 100%; width: 100%;"}

  .middle{:style => "height: 100%; width: 33%; padding: 2%;"}

    .column.settingsbox{:style => "height: 100%; width: 100%; text-align:center;"}
      %h4.sf Select Play Mode:
      .column.gametype{:style => "position: relative; margin: auto; display: flex; top: 1%;"}
        .sf-button.hoverable#singlesButton{:style => "width: 185px; height: 60px; margin: 20px auto; background-size: 100% 100%;"}
          .sf-label.hoverable SINGLES
        .sf-button.hoverable#doublesButton{:style => "width: 185px; height: 60px; margin: 20px auto; background-size: 100% 100%;"}
          .sf-label.hoverable DOUBLES

      #scan_section{:style => "padding: 2%;"}
        .sf-button{:style => "width: 400px; margin: 10px auto; height: 70px; background-size: 100% 100%"}
          .sf-label#scan-player SCAN PLAYER

        .sf-button.hoverable#clearButton{:style => "margin: 20px auto; background-size: 100% 100%;"}
          .sf-label.hoverable CLEAR PLAYERS
        =form_tag room_game_new_post_path(id: @id), :style => 'margin: 20px' do
          =submit_tag '* START GAME *', id: 'startButton', class: 'sf-button sf-label hoverable', style: "margin: 0 auto; display: inline-block; background-size: 100% 100%"


  .right{:style => "height: 100%; width: 33%; padding: #{player_box_padding};"}
    -#Doubles#
    .picturebox.doubles-picturebox{:style => "display: none; height: #{doubles_player_box_size}; width: #{doubles_player_box_size}; float: right;"}
      %img.player_b_1_img{:src => @player_b_1_url, :style => "height: 100%; width: 100%;"}
    .picturebox.doubles-picturebox{:style => "display: none; height: #{doubles_player_box_size}; width: #{doubles_player_box_size}; float: right; position: relative; left: -#{player_box_inset_width}; top: -#{player_box_inset_height};"}
      %img.player_b_2_img{:src => @player_b_2_url, :style => "height: 100%; width: 100%;"}
    -#Singles#
    .picturebox.singles-picturebox{:style => "display: none; height: #{singles_player_box_size}; width: #{singles_player_box_size}; float: right; position: relative; top: 10%"}
      %img.player_b_1_img{:src => @player_b_1_url, :style => "height: 100%; width: 100%;"}
:javascript
    var playerCount = #{@player_count};
    var playerIdHash = JSON.parse('#{@player_ids}');
    $(document).ready( function() {
      console.log('game_newfull JS init');

      if (playerCount == 2) {
        $('#singlesButton').addClass('selected');
      } else {
        $('#doublesButton').addClass('selected');
      }
      displayForPlayerCount(playerCount);
      updateScanPlayerButton($("#scan-player"), playerCount, playerIdHash);
    } );

    function updatePlayerCount(count, selectedElement, unselectedElement) {
      $.post("#{ j(room_game_player_count_post_path(id: @id)) }", { player_count: count })
      .done(function() {
        console.log("Player mode change to " + count + " succeeded");
        selectedElement.addClass("selected");
        unselectedElement.removeClass("selected");
        playerCount = count;
        displayForPlayerCount(playerCount);
        playerIdHash['a'].splice(1, 1);
        playerIdHash['b'].splice(1, 1);
        updateScanPlayerButton($("#scan-player"), playerCount, playerIdHash);
      })
      .fail(function() {
        console.log("Player mode change POST failed");
      })
    }

    function displayForPlayerCount(count) {
      if (count == 2) {
        $(".doubles-picturebox").hide();
        $(".singles-picturebox").show();
        $(".player_a_2_img").attr("src", "#{default_team_a_avatar}");
        $(".player_b_2_img").attr("src", "#{default_team_b_avatar}");
      } else if (count == 4) {
        $(".doubles-picturebox").show();
        $(".singles-picturebox").hide();
      } else {
        console.log("Invalid player count " + count + " passed to displayForPlayerCount");
      }
    }

    function updatePlayerIdObject(newPlayerData, playerIds) {
      playerIds[newPlayerData['team']][newPlayerData['player_number'] - 1] = newPlayerData['player_id'];
    }

    function updateScanPlayerButton(button, playerCount, playerIds) {
      var teamA = playerIds['a'];
      var teamB = playerIds['b'];
      if (playerCount == 2) {
        // Singles
        if (teamA.length == 0) {
          button.text('SCAN PLAYER 1');
        } else if (teamB.length == 0) {
          button.text('SCAN PLAYER 2');
        } else {
          button.text('LET\'S ROCK!');
        }
      } else {
        // Doubles
        if (teamA.length == 0) {
          button.text('SCAN PLAYER A-1');
        } else if (teamA.length < 2) {
          button.text('SCAN PLAYER A-2');
        } else if (teamB.length == 0) {
          button.text('SCAN PLAYER B-1');
        } else if (teamB.length < 2) {
          button.text('SCAN PLAYER B-2');
        } else {
          button.text('LET\'S ROCK!');
        }
      }
    }

    $("#singlesButton").click(function () {
      updatePlayerCount(2, $("#singlesButton"), $("#doublesButton"));
    })
    $("#doublesButton").click(function () {
      updatePlayerCount(4, $("#doublesButton"), $("#singlesButton"));
    })

    $("#clearButton").click(function (e) {
      // Wipe all the players
      $.post("#{ j(room_game_players_clear_post_path(id: @id)) }")
      .done(function() {
        console.log("Player clear succeeded");
        playerIdHash = {
          a: [],
          b: []
        };
        $(".player_a_1_img").attr("src", "#{ default_team_a_avatar }");
        $(".player_a_2_img").attr("src", "#{ default_team_a_avatar }");
        $(".player_b_1_img").attr("src", "#{ default_team_b_avatar }");
        $(".player_b_2_img").attr("src", "#{ default_team_b_avatar }");
        updateScanPlayerButton($("#scan-player"), playerCount, playerIdHash);
      })
      .fail(function() {
        console.log("Player clear POST failed");
      })
    })
